{
	"name": "pipeline1",
	"properties": {
		"activities": [
			{
				"name": "get product dataset",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "get customer dataset",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "AZ_SQL_PRODUCT",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "get customer dataset",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@concat('Select * from',' saleslt.customer')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "AZ_SQL_PRODUCT",
						"type": "DatasetReference"
					}
				]
			}
		],
		"parameters": {
			"table_name": {
				"type": "string",
				"defaultValue": "customer"
			}
		},
		"annotations": [],
		"lastPublishTime": "2023-08-02T16:54:06Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}